第一章-环境搭建

一.学习方法

 1. 记笔记(将你认为重要的知识点记录下来)。

2. 晚自习:将当天的案例梳理一遍，自己写一遍。

二.java特点。

 1. 开源，编程资源丰富（适用性强）。

 2. 跨平台，（操作系统，服务器，数据库）。

 3. 面向对象。

三.执行机制。

  1.编译执行

    （1）将源文件编译成机器码，一次编译多次执行。

    （2）执行效率高。

  2.解释执行。

    （1）将源文件通过解释器逐行的解释执行。每一次的执行都要解释源文件。

    （2）可以跨平台(因为不同的系统有不同解释器)。

  3.java的执行机制。

    （1）先编译再解释:将源文件通过编译器编译成字节码文件(.class文件)。

    （2）然后通过解释器执行.class文件。

四.名词解释

  1.JVM:虚拟机。在不同的操作系统中模拟相同环境。

  2.JRE：包含JVM。运行环境(解释器)。

  3.JDK: 包含了JRE。开发环境(编译器，类库，开发工具包，调试工具)。

五.JDK的安装

   1.JDK安装:

    版本推荐: 7.0 | 8.0 | 9.0

    安装步骤:

   2.创建文件夹

          JDK8.0

                -jre

                -jdk

   3.双击运行安装文件

     第一个窗口安装jdk，指定到对应的文件夹

     第二个窗口安装jre，指定到对应的文件夹

         

六.环境搭建:

  1.计算机右击属性，高级系统设置，选择高级中的环境变量

  2.CLASSPATH:.               

    作用:在当前路径下寻找.class文件。

  3.java_Home =>JDK安装路径，后面一定要加是英语输出法状态下的分号(;)

    作用:提供给服务器使用。

  4.Path=>JDK安装路径，bin包路径。

    后面一定要加是英语输出法状态下的分号(;)。

    作用:引入了javac 和java 命令。

  5.测试是否配置成功:

     (1)javac 和 java 分别测试。

    （2）（如果没有出现 ”不是内部或外部命令“ 说明配置成功。

七.dos命令如何打开dos窗口。

    1.win + r 打开运行窗口

    2.输入cmd回车，dos命令。

    4. d: 切换盘符

    5. cd 路径  进入指定路径

    6. cd..  返回上一级路径

    7.del  删除文件  文件夹（rd命令）  

     注意:删除的内容不会进入回收站

    8.dir 展示当前路径下所有的文件以及文件夹

    9.cls 清除窗口中的信息

    10.exit 退出dos窗口

八.第一个java程序

1.鼠标右键单机想要进文件的地址，

  新建后文本文档，文件名字自己起（扩展名一定是点.java）。

2.打开，开始编辑，在文件中编写代码。如下例案

例案

public class Hwllo{

public static void main(String[] args){

System.out.println(“Hello World”);

}

} 

class Welcome{

pubkic static void main(String[] args){

System.out.println(“Welcome to Beijing”);

} 

}

3.编译命令。

  语法:javac 准备编译的文件名 （带扩展名.java)	  编译java程序，得到.class文件。

4.运行代码。

  语法：java 准备运行的文件名	（不需要扩展名.class)

5.对源代码进行语法检查，后编译，运行：java-------->class

6.注意。

  修改源代码必须重新编译再去运行。

九.类的阐述

1.一个源文件中可以定义多个类，编译后每个类都会生成独立的.class文件。

2.一个类中最多只能有一个main方法。

3.公开类（public）公开类的，类名必须和文件名一致，包括大小写。

4.一个源文件中可以定义多个类，但是最多只能定义一个公开类。

十.包

 1.概念： 类似于文件夹。包用来管理.class文件。

2.语法: package 包名;

3.位置: 源文件的第一行

4.带包编译: javac -d . 源文件名.java

5.带包运行: java 包名.类名

6.包的定义规则:域名倒置

十一.代码缩进规范。

1.同级代码列对缩进  让代码结构层次更清晰。(tab制表位)

2.优秀的代码标准。

（1）可读性  代码必须容易的，被人阅读，被人理解。

（2）每行一句代码。

（3）每进入一个代码块做一次缩进  {}代码块。

（4）同级代码列对齐。

十二.java中的规范注释。

 1.概念: 不参与代码运行。 是为了给代码添加解释说明的。

 2.单行注释: //

 3.多行注释: /**/

 4.文档注释: /** */ 生成外部的说明书: javadoc -d . 源文件.java（自动将注释生产API文档）。

【2】在doc里面打开index.html在打开Hello类文档。

 【例案】

package f1.f2.v3.v4;

import java.util.*;

import java.sql.*;

/**

Hello 类

*/

public class f202101201505{

	/**

	main主涵数  Java程序的入口涵数，呵呵

	*/

/**

*/

//自动将注释生产API文档

	public static void main(String[] args){

		System.out.println("Hello World");

		List I = new ArrayList();

		java.util.Date d;

		/**

		Date 类

		*/

	}

}

十三.标识符的命名规则

（标识符）是什么意思。

答：就是文件夹的名字。

2.硬性要求:

   （1） 必须由数字，字母，_，$组成。数字不能开头的。

   （2）不能使用java中的关键字，保留字（true ，false ， goto）重名，以及(特殊单词)

【1】关键字：Java中具有特殊语法含义的单词

class public  static  void  package  import

【2】保留字：goto  const  int  goto  System.out.printlngoyo);

【3】特殊单词（3个）

1

拼音 Zhen                              tu

意思   真                 true    读    吐

2

拼音  jia                                 bu si

意思  假                  false   读      不死

3

拼音  Kong zhi zhi zhen                   nao

意思      控制指针         null   读      闹

但是不是关键词！！！！

2.注意

（1）大小写敏感。

（2）没有长度限制。

3.软性要求:

   1.规范

     (1)（望文知义）是什么意思。

        答：看见文章就知道表达的事，形容理解能力很强，

             或者是看见一件事物立马能理解类似的事物。（见名知意）

    （2）类名由多个单词组成，要求每个单词首字母大写。 

          举例: HelloWorldJava

    （3）函数名由多个单词组成，首单词首字母小写。后面的拼接词首字母大写。 

         举例: helloWorldJava。

    （4）包名全小写。使用.划分层级关系  

         举例:hello.world.java。

    （5）常量名由多个单词组成，全大写单词间用_隔开
